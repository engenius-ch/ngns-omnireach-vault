name: Build & package

on: push

permissions:
  contents: write

jobs:
  build-and-package:
    name: build backend and create a deployment package
    runs-on: ubuntu-22.04
    steps:
      - name: checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: '0' # fetch the entire history, needed by shipkit-auto-version plugin

      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: init environment
        run: |
          MASTER_AUTO_BUILD=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          echo "MASTER_AUTO_BUILD=$MASTER_AUTO_BUILD" >> $GITHUB_ENV
          echo "MASTER_AUTO_BUILD=$MASTER_AUTO_BUILD"
          
          RELEASE_VERSION="$(./gradlew properties | grep ^version: | sed 's/^version: //')"
          if [ $MASTER_AUTO_BUILD != 'true' ]; then
            RELEASE_VERSION=$RELEASE_VERSION-$(git rev-parse --short HEAD)
          fi
          
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$RELEASE_VERSION"
          
      - name: build and test backend
        run: |
          ./gradlew test -Pversion=${{ env.RELEASE_VERSION }}

      - name: tag release for master builds
        if: ${{ env.MASTER_AUTO_BUILD == 'true' }}
        run: |
          git tag "v${{ env.RELEASE_VERSION }}"
          git push --tags

      - name: publish packages for master builds
        if: ${{ env.MASTER_AUTO_BUILD == 'true' }}
        run: |
          ./gradlew publish \
          -DGITHUB_USER=${{ secrets.BUILD_USER }} \
          -DGITHUB_TOKEN=${{ secrets.BUILD_TOKEN }} \
          -Pversion=${{ env.RELEASE_VERSION }}
